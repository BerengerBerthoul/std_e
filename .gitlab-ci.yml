#before_script:

variables:
  GIT_SUBMODULE_STRATEGY: normal
  no_proxy: .onera.net,.onera.fr
  https_proxy: proxy.onecert.fr:80

stages: # Ici on déclare toutes nos étapes
  - build
  - test
  - pages
  # - deploy

build:
  stage: build # On déclare que ce `job` fait partie de l'étape build
  script:
    - hostname
    - whoami
    - pwd
    - module av
    - echo $PWD
    - ls -lrt
    - cd ..
    - ls -lrt
    - rm -rf build
    - mkdir -p build
    - cd build
    - module purge
    - module load gcc/8.3 cmake/3.12.3 impi/17 python/2.7.8
    - export https_proxy=proxy:80
    - cmake ../std_e -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_FLAGS="-Wall -std=c++17 -fmax-errors=4" -DCMAKE_CXX_FLAGS_RELEASE="-O3 -march=native -DNDEBUG -fPIC" -DSTD_E_ENABLE_TEST=ON -DSTD_E_ENABLE_COVERAGE=OFF -DSTD_E_BUILD_DOCUMENTATION=OFF -DCMAKE_EXPORT_COMPILE_COMMANDS=OFF
    - make
    - make test
    - ./std_e_unit_tests -r=junit > report.xml
    - ls -lrt
    - mkdir -p ../public
    - cp report.xml ..
    - cp report.xml ../public
    - ls -lrt ..
    - ls -lrt ../public
    
  artifacts:
    paths:
      - public
    reports:
      junit: report.xml

    

test:
  stage: test # On déclare que ce `job` fait partie de l'étape build
  script:
    - ls -lrt
    - cd ../build
    - echo $PWD
    - module load gcc/8.3 cmake/3.12.3 impi/17 python/2.7.8
    - make test
    
pages:
  script:
    - ls -lrt
  artifacts:
    paths:
      - public
  only:
    - master
    